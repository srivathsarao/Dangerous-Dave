package com.ashtav.dangerousdave;

import java.util.HashMap;
import java.util.Map;

public class Levels {
		
	public static Map<String, Object> level1;
	public static Map<String, Object> level2;
	public static Map<String, Object> level3;

	//1  = dave
	//2  = brick
	//3  = Mud Wall
	//4  = Door
	//5  = pipe
	//6  = Blue Wall
	//8  = Violet Gem
	//9  = Diamond
	//10 = Red Diamond
	//14 = Trophy
	
	static {
		level1 = new HashMap<String, Object>();
		level1.put("height", 10);
		level1.put("width", 20);
		level1.put("data", new Integer[][] {{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2, 2, 2, 2, 2, 2,  2, 3}, 
											{2, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 10, 2, 3}, 
											{2, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 14, 0, 0, 0, 9, 0, 0,  2, 3}, 
											{2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2,  0, 0, 0, 2, 0, 0,  2, 3}, 
											{2, 9, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0,  0, 9, 0, 0, 0, 9,  2, 3}, 
											{2, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0,  0, 2, 0, 0, 0, 2,  2, 3}, 
											{2, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0,  2, 3}, 
											{2, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 2,  2, 2, 2, 2, 2, 0,  2, 3}, 
											{2, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2,  4, 0, 0, 0, 0, 0,  2, 3}, 
											{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2, 2, 2, 2, 2, 2,  2, 3}});
			
		level2 = new HashMap<String, Object>();
		level2.put("height", 10);
		level2.put("width", 50);
		level2.put("data", new Integer[][] {{2, 2,  2, 2,  2,  2,  2,  2,  2,  2, 2,  2,  2,  2,  2, 2,  2,  2,  2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2}, 
										    {2, 10, 0, 0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  8,  0,  0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  2}, 
										    {2, 0,  0, 0,  0,  0,  0,  0,  0,  0, 0,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0, 0, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2}, 
											{2, 7,  0, 0,  7,  0,  0,  0,  0,  0, 0,  0,  0,  7,  0, 0,  0,  0,  0,  0,  0,  0,  0, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 15, 15, 15, 0,  15, 15, 15, 0,  15, 15, 0,  0}, 
											{2, 0,  0, 0,  0,  0,  0,  0,  7,  7, 7,  0,  0,  0,  2, 0,  0,  0,  0,  0,  0,  0,  2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 15, 0,  15, 0,  15, 0,  0,  0,  15, 0,  15, 0}, 
											{2, 0,  7, 7,  0,  0,  0,  0,  0,  2, 0,  0,  0,  14, 2, 0,  7,  7,  7,  7,  7,  0,  2, 0, 0, 2, 2, 0, 8, 2, 0, 0, 0, 0, 2, 0, 0, 2, 15, 15, 15, 0,  15, 0,  0,  0,  15, 15, 0,  0}, 
											{2, 0,  0, 0,  0,  0,  0,  0,  0,  2, 0,  7,  0,  0,  2, 0,  0,  0,  0,  0,  0,  0,  2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 0, 2, 2, 15, 0,  0,  0,  15, 0,  0,  0,  15, 0,  15, 0}, 
											{2, 0,  0, 0,  7,  7,  7,  0,  10, 2, 0,  0,  0,  0,  2, 0,  9,  9,  9,  9,  9,  0,  2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 2, 0, 0, 0, 0, 2, 15, 0,  0,  0,  15, 15, 15, 0,  15, 0,  15, 0}, 
											{2, 1,  0, 0,  0,  0,  0,  0,  0,  2, 9,  0,  0,  7,  2, 0,  0,  0,  0,  0,  0,  0,  2, 0, 0, 0, 2, 8, 0, 0, 0, 8, 2, 0, 0, 2, 8, 2, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}, 
											{2, 2,  2, 16, 16, 16, 16, 16, 16, 2, 16, 16, 16, 16, 2, 17, 17, 17, 17, 17, 17, 17, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16}});

		level3 = new HashMap<String, Object>();
		level3.put("height", 10);
		level3.put("width", 100);
		level3.put("data", new Integer[][] {{3, 3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 22, 12, 0, 0, 19, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 22},
											{3, 3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 11, 0, 0, 0, 0, 4, 3, 3, 22, 0, 12, 0, 19, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
											{3, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 19, 3, 3, 22, 0, 0, 12, 0, 0, 12, 0, 0, 12, 0, 0, 12, 0, 0, 12, 0, 0, 12, 0, 0, 12, 0, 0, 12, 3, 3},
											{3, 9,  0,  0,  0,  9,  0,  0,  0,  0,  23, 0,  0,  0,  9,  0,  0,  0,  0,  9,  0,  0,  0,  9,  0,  0,  0,  0,  9,  0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 9, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
											{3, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 3, 3},
											{3, 5,  1,  0,  0,  15, 0,  0,  0,  15, 0,  0,  0,  15, 15, 0,  0,  0,  0,  15, 0,  0,  0,  15, 0,  0,  0,  15, 0,  0, 0, 15, 0, 0, 0, 15, 15, 0, 0, 0, 15, 0, 0, 0, 15, 0, 0, 15, 0, 0, 0, 0, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3},
											{3, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 16, 16, 0, 0, 0, 0, 0, 0, 16, 16, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3},
											{3, 3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 16, 16, 0, 0, 0, 0, 16, 16, 3, 3, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3},
											{3, 3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 16, 16, 24, 14, 16, 16, 3, 3, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3},
											{3, 3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 3, 20}});
					
		}		
		
	public static Integer[] scores  = { 0, 0, 0, 0, 0, 0, 0, 0, 50, 100, 150, 300, 600, 750, 1000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
}